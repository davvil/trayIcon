#!/usr/bin/env python2
#
#       This program is free software; you can redistribute it and/or modify
#       it under the terms of the GNU General Public License as published by
#       the Free Software Foundation; either version 2 of the License, or
#       (at your option) any later version.
#       
#       This program is distributed in the hope that it will be useful,
#       but WITHOUT ANY WARRANTY; without even the implied warranty of
#       MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#       GNU General Public License for more details.
#       
#       You should have received a copy of the GNU General Public License
#       along with this program; if not, write to the Free Software
#       Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
#       MA 02110-1301, USA.
#       

import gtk
import gobject
import sys
import threading
import os

class TrayIcon(threading.Thread):
	def __init__(self):
            threading.Thread.__init__(self)
            self.icon = gtk.StatusIcon()
            self.icon.set_visible(False)
            self.current_icon = None

        def run(self):
            while True:
                l = sys.stdin.readline()
                if not l:
                    break
                else:
                    fields = l.strip().split()
                    if not fields:
                        continue
                    if fields[0] == "icon":
                        gobject.idle_add(self.update_icon, fields[1])
                    elif fields[0] == "tooltip":
                        gobject.idle_add(self.update_tooltip, " ".join(fields[1:]))
                    elif fields[0] == "hide":
                        gobject.idle_add(self.hide)
            os._exit(0)
	
	def update_icon(self, fname):
            if fname != self.current_icon:
                self.icon.set_from_file(fname)
                self.icon.set_visible(True)
                self.current_icon = fname

        def update_tooltip(self, tooltip):
            self.icon.set_tooltip_text(tooltip)

        def hide(self):
            self.icon.set_visible(False)
	
if __name__ == "__main__":
    gobject.threads_init()
    TrayIcon().start()
    try:
        gtk.main()
    except KeyboardInterrupt:
        os._exit(0)
